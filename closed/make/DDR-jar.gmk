# ===========================================================================
# (c) Copyright IBM Corp. 2018, 2018 All Rights Reserved
# ===========================================================================
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# IBM designates this particular file as subject to the "Classpath" exception
# as provided by IBM in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, see <http://www.gnu.org/licenses/>.
# ===========================================================================

# The main target.
all :

ifeq (,$(wildcard $(SPEC)))
  $(error DDR-jar.gmk needs SPEC set to a proper spec.gmk)
endif

include $(SPEC)
include $(SRC_ROOT)/make/common/MakeBase.gmk
include $(SRC_ROOT)/make/common/JavaCompilation.gmk
include $(SRC_ROOT)/jdk/make/Setup.gmk

# The main source directory.
DDR_SOURCE_DIR := $(OPENJ9_TOPDIR)/debugtools/DDR_VM/src

# A marker file to detect when compilation is needed.
DDR_COMPILE_MARKER := $(JDK_OUTPUTDIR)/ddr/compile.done

# Where to write the class files.
DDR_CLASSES_BIN := $(JDK_OUTPUTDIR)/ddr/bin

# This file will contain the list of Java source files to be compiled.
DDR_SRC_LIST_FILE := $(JDK_OUTPUTDIR)/ddr/src.list

# Packages to be excluded from compilation.
DDR_SRC_EXCLUDES := com/ibm/j9ddr/tools/ant

ifeq (,$(filter mz31 mz64,$(OPENJ9_PLATFORM_CODE)))
DDR_SRC_EXCLUDES += com/ibm/j9ddr/corereaders/tdump
endif

# The package containing the generated structure stubs.
DDR_STUBS_PACKAGE := com/ibm/j9ddr/vm29/structure

# The list of structure alias files that must be included in the jar.
DDR_ALIAS_FILES := \
	com/ibm/j9ddr/StructureAliases29.dat \
	#

# Generate the list of all Java source files to be compiled
# and capture it in a variable for make.
DDR_SOURCE_FILES := $(shell \
	$(FIND) $(DDR_SOURCE_DIR) -name "*.java" -type f -print \
		$(foreach package, $(DDR_SRC_EXCLUDES), | $(GREP) -F -v $(DDR_SOURCE_DIR)/$(package)/) \
		> $(DDR_SRC_LIST_FILE) \
		&& $(CAT) $(DDR_SRC_LIST_FILE) \
	)

# Compile the Java sources. We can't use SetupJavaCompilation
# because it doesn't properly handle source file names with '$'.
$(DDR_COMPILE_MARKER) : $(DDR_SOURCE_FILES)
	$(RM) -rf $(DDR_CLASSES_BIN)
	$(MKDIR) -p $(DDR_CLASSES_BIN) $(addprefix $(DDR_CLASSES_BIN)/, $(dir $(DDR_ALIAS_FILES)))
	@$(ECHO) "Compiling $(words $(DDR_SOURCE_FILES)) files for j9ddr.jar"
	$(GENERATE_JDKBYTECODE_JVM) $(GENERATE_JDKBYTECODE_JAVAC) \
		$(GENERATE_JDKBYTECODE_FLAGS) \
		$(JAVAC_FLAGS) \
		-d $(DDR_CLASSES_BIN) \
		-implicit:none \
		-sourcepath $(DDR_SOURCE_DIR) \
		@$(DDR_SRC_LIST_FILE)
	$(foreach file, $(DDR_ALIAS_FILES), \
		$(CP) $(DDR_SOURCE_DIR)/$(file) $(DDR_CLASSES_BIN)/$(file) ;)
	$(TOUCH) $@

$(eval $(call SetupArchive,BUILD_DDR_MAIN, $(DDR_COMPILE_MARKER), \
	SRCS := $(DDR_CLASSES_BIN), \
	SUFFIXES := .class .dat, \
	EXCLUDES := $(DDR_STUBS_PACKAGE), \
	JAR := $(JDK_IMAGE_DIR)/jre/lib/ddr/j9ddr.jar \
	))

all : $(BUILD_DDR_MAIN_JAR)
